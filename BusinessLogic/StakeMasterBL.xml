<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StakeMasterBL</name>
    </assembly>
    <members>
        <member name="T:StakeMaster.BusinessLogic.FreeTransactionNotPossibleException">
            <summary>Represents errors that occur when no zero fee transaction is possible.</summary>
            <inheritdoc />
        </member>
        <member name="M:StakeMaster.BusinessLogic.FreeTransactionNotPossibleException.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:StakeMaster.BusinessLogic.FreeTransactionNotPossibleException" /> class.
            </summary>
            <param name="inputCount">The number of inputs for the transaction.</param>
            <param name="outputCount">The number of outputs for the transaction.</param>
            <param name="calculatedTransactionSize">The calculated size of the transaction.</param>
            <param name="freeTransactionByteLimit">The actual size limit for zero fee transactions.</param>
            <inheritdoc />
        </member>
        <member name="M:StakeMaster.BusinessLogic.FreeTransactionNotPossibleException.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:StakeMaster.BusinessLogic.FreeTransactionNotPossibleException" /> class.
            </summary>
            <param name="inputCount">The number of inputs for the transaction.</param>
            <param name="outputCount">The number of outputs for the transaction.</param>
            <param name="calculatedTransactionSize">The calculated size of the transaction.</param>
            <param name="freeTransactionByteLimit">The actual size limit for zero fee transactions.</param>
            <param name="innerException">
                The exception that is the cause of the current exception, or a null reference (
                <value>Nothing</value>
                in Visual Basic) if no inner exception is specified.
            </param>
            <inheritdoc />
        </member>
        <member name="M:StakeMaster.BusinessLogic.FreeTransactionNotPossibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc />
        </member>
        <member name="P:StakeMaster.BusinessLogic.FreeTransactionNotPossibleException.CalculatedTransactionSize">
            <summary>
                Gets the calculated size of the transaction.
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.FreeTransactionNotPossibleException.FreeTransactionByteLimit">
            <summary>
                Gets the actual size limit for zero fee transactions.
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.FreeTransactionNotPossibleException.InputCount">
            <summary>
                Gets the number of inputs for the transaction.
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.FreeTransactionNotPossibleException.Message">
            <inheritdoc />
        </member>
        <member name="P:StakeMaster.BusinessLogic.FreeTransactionNotPossibleException.OutputCount">
            <summary>
                Gets the number of outputs for the transaction.
            </summary>
        </member>
        <member name="M:StakeMaster.BusinessLogic.FreeTransactionNotPossibleException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc />
        </member>
        <member name="T:StakeMaster.BusinessLogic.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.Properties.Resources.FreeTransactionNotPossibleException_Free_Name">
            <summary>
              Looks up a localized string similar to Zero fee transaction size limit:.
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.Properties.Resources.FreeTransactionNotPossibleException_Generic">
            <summary>
              Looks up a localized string similar to A free Transaction is not possible with the given values..
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.Properties.Resources.FreeTransactionNotPossibleException_InputCount_Name">
            <summary>
              Looks up a localized string similar to Inputs:.
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.Properties.Resources.FreeTransactionNotPossibleException_OutputCount_Name">
            <summary>
              Looks up a localized string similar to Outputs:.
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.Properties.Resources.FreeTransactionNotPossibleException_Size_Name">
            <summary>
              Looks up a localized string similar to Calculated transaction size:.
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.Properties.Resources.SettingsArgumentInvalidException_Argument_Name">
            <summary>
              Looks up a localized string similar to Argument:.
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.Properties.Resources.SettingsArgumentInvalidException_Generic">
            <summary>
              Looks up a localized string similar to The argument given is invalid or unknown in the current context..
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.Properties.Resources.SettingsHelper_DisplayHelp_Header">
            <summary>
              Looks up a localized string similar to StakeMaster commandline arguments:.
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.Properties.Resources.SettingsHelper_DisplayHelp_InvalidArgument_Text">
            <summary>
              Looks up a localized string similar to {0}{1}Please check your settings..
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.Properties.Resources.SettingsHelper_DisplayHelp_Text">
            <summary>
              Looks up a localized string similar to General settings{0}-? or --help: Displays this help{0}{0}Settings regarding the stake function{0}-s=&lt;true/false&gt; or --stakes=&lt;true/false&gt;  : Enables or disables modifications of inputs at the stake address. Default: true{0}-a=&lt;address&gt; or --stakeaddress=&lt;addres&gt;   : Sets the dedicated stake address. Mandatory.{0}-c=&lt;address&gt; or --collectaddress=&lt;address&gt;: Sets the dedicated collect address. Mandatory.{0}-w=&lt;days&gt; or --patience=&lt;days&gt;            : Sets the number of days when a input should stake at least on [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.Properties.Resources.SettingsHelper_ExtractArgument_ArgumentNotDefined_Message">
            <summary>
              Looks up a localized string similar to Argument is not defined..
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.Properties.Resources.SettingsHelper_ExtractArgument_ArgumentNotUnique_Message">
            <summary>
              Looks up a localized string similar to Argument is not unique..
            </summary>
        </member>
        <member name="T:StakeMaster.BusinessLogic.SettingsArgumentInvalidException">
            <summary>Represents errors that occur when unexpected arguments are found.</summary>
            <inheritdoc />
        </member>
        <member name="M:StakeMaster.BusinessLogic.SettingsArgumentInvalidException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:StakeMaster.BusinessLogic.SettingsArgumentInvalidException" /> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:StakeMaster.BusinessLogic.SettingsArgumentInvalidException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:StakeMaster.BusinessLogic.SettingsArgumentInvalidException" /> class.
            </summary>
            <param name="argument">
                The argument that causes the exception.
            </param>
        </member>
        <member name="M:StakeMaster.BusinessLogic.SettingsArgumentInvalidException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:StakeMaster.BusinessLogic.SettingsArgumentInvalidException" /> class.
            </summary>
            <param name="argument">
                The argument that causes the exception.
            </param>
            <param name="innerException">
                The exception that is the cause of the current exception, or a null reference (
                <value>Nothing</value>
                in Visual Basic) if no inner exception is specified.
            </param>
            <inheritdoc />
        </member>
        <member name="M:StakeMaster.BusinessLogic.SettingsArgumentInvalidException.#ctor(System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:StakeMaster.BusinessLogic.SettingsArgumentInvalidException" /> class.
            </summary>
            <param name="argument">
                The argument that causes the exception.
            </param>
            <param name="message">
                The custom message that describes the error.
            </param>
            <inheritdoc />
        </member>
        <member name="M:StakeMaster.BusinessLogic.SettingsArgumentInvalidException.#ctor(System.String,System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:StakeMaster.BusinessLogic.SettingsArgumentInvalidException" /> class.
            </summary>
            <param name="argument">
                The argument that raised this exception.
            </param>
            <param name="message">
                The custom message that describes the error.
            </param>
            <param name="innerException">
                The exception that is the cause of the current exception, or a null reference (
                <value>Nothing</value>
                in Visual Basic) if no inner exception is specified.
            </param>
            <inheritdoc />
        </member>
        <member name="M:StakeMaster.BusinessLogic.SettingsArgumentInvalidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc />
        </member>
        <member name="P:StakeMaster.BusinessLogic.SettingsArgumentInvalidException.Argument">
            <summary>
                Holds the argument that causes the exception.
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.SettingsArgumentInvalidException.Message">
            <inheritdoc />
        </member>
        <member name="M:StakeMaster.BusinessLogic.SettingsArgumentInvalidException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc />
        </member>
        <member name="T:StakeMaster.BusinessLogic.SettingsHelper">
            <summary>
                Contains methods for initializing and check settings.
            </summary>
        </member>
        <member name="M:StakeMaster.BusinessLogic.SettingsHelper.DisplayHelp(System.String)">
            <summary>
                Displays the help message for the command line options.
            </summary>
            <param name="message">
                An Additional message to show before the help message.
            </param>
        </member>
        <member name="M:StakeMaster.BusinessLogic.SettingsHelper.Read(System.String[])">
            <summary>
                Returns the settings based on the arguments given.
            </summary>
            <param name="args">
                Arguments that are considered when generating the settings.
            </param>
            <returns>
                Returns a <see cref="T:StakeMaster.Settings" />-object with all properties set based on the given arguments.
            </returns>
            <exception cref="T:StakeMaster.BusinessLogic.SettingsArgumentInvalidException">Will be thrown when arguments cannot be parsed.</exception>
        </member>
        <member name="T:StakeMaster.BusinessLogic.TransactionHelper">
            <summary>
                Contains methods for handling transaction sizes.
            </summary>
        </member>
        <member name="M:StakeMaster.BusinessLogic.TransactionHelper.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:StakeMaster.BusinessLogic.TransactionHelper.FreeTransactionByteLimit">
            <summary>
                Gets the allowed size for zero fee transactions.
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.TransactionHelper.InputSize">
            <summary>
                Gets the size in bytes for one input.
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.TransactionHelper.OutputSize">
            <summary>
                Gets the size in bytes for one output.
            </summary>
        </member>
        <member name="P:StakeMaster.BusinessLogic.TransactionHelper.TransactionOverhead">
            <summary>
                Gets the size in bytes for transaction overhead.
            </summary>
        </member>
        <member name="M:StakeMaster.BusinessLogic.TransactionHelper.GetMaxPossibleInputCountForFreeTransaction(System.Int32)">
            <summary>
                Gets the amount of inputs that can be included in a transaction.
            </summary>
            <param name="numberOfOutputs">
                The number of outputs already used in the transaction.
            </param>
            <returns>
                The amount of possible inputs.
            </returns>
        </member>
        <member name="M:StakeMaster.BusinessLogic.TransactionHelper.GetMaxPossibleOutputCountForFreeTransaction(System.Int32)">
            <summary>
                Gets the amount of outputs that can be included in a transaction.
            </summary>
            <param name="numberOfInputs">
                The number of inputs already used in the transaction.
            </param>
            <returns>
                The amount of possible outputs.
            </returns>
        </member>
        <member name="M:StakeMaster.BusinessLogic.TransactionHelper.GetTransactionSize(System.Int32,System.Int32)">
            <summary>
                Gets the size of a transaction.
            </summary>
            <param name="numberOfInputs">
                The number of inputs used in the transaction.
            </param>
            <param name="numberOfOutputs">
                The number of outputs used in the transaction
            </param>
            <returns>
                The calculated transaction size;
            </returns>
        </member>
    </members>
</doc>
